<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>